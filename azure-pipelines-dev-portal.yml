# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
 - dev

stages:
  - stage: Build
    jobs:
      - job: build_Portal_NPM
         
      
        pool:
          vmImage: ubuntu-latest

        variables:
        - group: Dev
        - name: REACT_APP_ENV
          value: 'beta'

        steps:      

        - task: Bash@3
          displayName: Display STATIC_WEBAPP_DEV_PORTAL_TOKEN
          inputs:
            targetType: 'inline'
            script: |
               echo "$[variables.STATIC_WEBAPP_DEV_PORTAL_TOKEN]"

        # - task: CredScan@3
        
        - task: Bash@3
          inputs:
            targetType: 'inline'
            script: |
              # Write your commands here
              
              echo "Structure of work folder of this pipeline:"
              tree $(Agent.WorkFolder)\1 /f
              
              echo "System.DefaultWorkingDirectory"
              echo "$(System.DefaultWorkingDirectory)"

              echo "System.ArtifactsDirectory"
              echo "$(System.ArtifactsDirectory)"
              
              echo "Build.ArtifactStagingDirectory:" 
              echo "$(Build.ArtifactStagingDirectory)"

              echo "Build.BinariesDirectory:" 
              echo "$(Build.BinariesDirectory)"

              echo "Build.SourcesDirectory:"
              echo "$(Build.SourcesDirectory)"

              echo "Build.SourcesDirectory:"
              echo "$(Build.SourcesDirectory)"

              echo "Agent.BuildDirectory:"
              echo "$(Agent.BuildDirectory)"

              echo "Static Web App Dev Token"
              echo: "$(STATIC_WEBAPP_DEV_PORTAL_TOKEN)"

  #       - task: Bash@3
  #         env:
  #           REACT_APP_ENV: '${{ variables.REACT_APP_ENV }}'
  #         displayName: Npm Install
  #         inputs:
  #           targetType: 'inline'
  #           workingDirectory: 'src/Portal'
  #           bashEnvValue: 
  #           script: |
  #             - script: |
  #                 echo REACT_APP_ENV=beta
  #                 npm install
  #                 npm run build

  #       - task: CopyFiles@2
  #         inputs:
  #           SourceFolder: '$(build.sourcesdirectory)/src/Portal/build'
  #           Contents: '**'
  #           targetFolder: '$(Build.ArtifactStagingDirectory)/build'

  #       - task: PublishBuildArtifacts@1
  #         inputs:
  #           pathToPublish: '$(Build.ArtifactStagingDirectory)/build'
  #           artifactName: 'drop'
            

  # - stage: Deploy_App_Service
  #   jobs:
  #     -  deployment:
  #        environment: Dev
  #        condition: 
  #        strategy:
  #         runOnce:
  #             deploy:
  #                steps:

  #                   - task: DownloadBuildArtifacts@1
  #                     displayName: Debug download artifact
  #                     inputs:
  #                       buildType: 'current'
  #                       downloadType: 'single'
  #                       artifactName: 'drop'
  #                       downloadPath: '$(System.DefaultWorkingDirectory)'
                    
  #                   # - task: AzureRmWebAppDeployment@4
  #                   #   inputs:
  #                   #     ConnectionType: 'AzureRM'
  #                   #     azureSubscription: 'Weixian-Azure(ee611083-4581-4ba1-8116-a502d4539206)'
  #                   #     appType: 'webApp'
  #                   #     WebAppName: 'portal-azworkbench-dev'
  #                   #     packageForLinux: '$(System.DefaultWorkingDirectory)/drop'


  #                   - task: AzureStaticWebApp@0
  #                     inputs:
  #                       workingDirectory: '$(System.DefaultWorkingDirectory)/drop'
  #                       app_location: '/'
  #                       verbose: true
  #                       azure_static_web_apps_api_token: '$(STATIC_WEBAPP_DEV_PORTAL_TOKEN)'

                        
                    
                    
  