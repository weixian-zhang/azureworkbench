# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
 - master

variables:
  REACT_APP_ENV: 'prod'
  webappName: 'portal-azworkbench-prod'
  portalDirectory: src/Portal

stages:
  - stage: Build
    jobs:
      - job: build_Portal_NPM
         
        pool:
          vmImage: ubuntu-latest

        steps:       

        - task: CredScan@3
          displayName: Scan for credentials
          inputs:
            scanFolder: $(portalDirectory)
            
        #https://docs.opensource.microsoft.com/tools/cg/index.html
        - task: ComponentGovernanceComponentDetection@0
          displayName: Scans open-source package vulnerabilities
          inputs:
            scanType: 'Register'
            verbosity: 'Verbose'
            sourceScanPath: '$(portalDirectory)'
            alertWarningLevel: 'High'

        - task: ESLint@1
          inputs:
            Configuration: 'required'
            TargetType: 'eslint'
            TargetsESLint: '$(portalDirectory)/**/*.{js,ts}'
            ErrorLevel: 'warn'
        
        - task: Bash@3
          inputs:
            targetType: 'inline'
            script: |
              # Write your commands here
              
              echo "Structure of work folder of this pipeline:"
              tree $(Agent.WorkFolder)\1 /f
              
              echo "System.DefaultWorkingDirectory"
              echo "$(System.DefaultWorkingDirectory)"

              echo "System.ArtifactsDirectory"
              echo "$(System.ArtifactsDirectory)"
              
              echo "Build.ArtifactStagingDirectory:" 
              echo "$(Build.ArtifactStagingDirectory)"

              echo "Build.BinariesDirectory:" 
              echo "$(Build.BinariesDirectory)"

              echo "Build.SourcesDirectory:"
              echo "$(Build.SourcesDirectory)"

              echo "Agent.BuildDirectory:"
              echo "$(Agent.BuildDirectory)"

              echo "REACT_APP_ENV:"
              echo "$(REACT_APP_ENV)"

              echo "Portal Directory:"
              echo "$(portalDirectory)"

              
              

        - task: Bash@3
          env:
            REACT_APP_ENV: '${{ variables.REACT_APP_ENV }}'
          displayName: Npm Install
          inputs:
            targetType: 'inline'
            workingDirectory: $(portalDirectory)
            bashEnvValue: 
            script: |
              - script: |
                  echo REACT_APP_ENV=$(REACT_APP_ENV)
                  npm install
                  npm run build

        - task: CopyFiles@2
          inputs:
            SourceFolder: '$(build.sourcesdirectory)/src/Portal/build'
            Contents: '**'
            targetFolder: '$(Build.ArtifactStagingDirectory)/build'

        - task: PublishBuildArtifacts@1
          inputs:
            pathToPublish: '$(Build.ArtifactStagingDirectory)/build'
            artifactName: 'drop'
            

  - stage: Deploy_App_Service
    jobs:
      -  deployment:
         environment: Dev
         condition: 
         strategy:
          runOnce:
              deploy:
                 steps:

                    - task: DownloadBuildArtifacts@1
                      displayName: Debug download artifact
                      inputs:
                        buildType: 'current'
                        downloadType: 'single'
                        artifactName: 'drop'
                        downloadPath: '$(System.DefaultWorkingDirectory)'
                    
                    - task: AzureRmWebAppDeployment@4
                      inputs:
                        ConnectionType: 'AzureRM'
                        azureSubscription: 'Weixian-Azure(ee611083-4581-4ba1-8116-a502d4539206)'
                        appType: 'webApp'
                        WebAppName: '$(webappName)'
                        packageForLinux: '$(System.DefaultWorkingDirectory)/drop'        
                    
                    
  