# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core


trigger:
- master

variables:
  buildConfiguration: 'Release'
  apiWorkingDir: 'Portal.Services/AzW.Web.API'
  apiPublishPath: $(Build.ArtifactStagingDirectory)/api/publish

stages:
- stage: Build
  pool:
    vmImage: ubuntu-latest
  jobs:
    
    - job: CI
      
      steps:
       - task: CredScan@3
         displayName: scan code for creds
         inputs:
           toolVersion: Latest
           scanFolder: ${Build.SourcesDirectory}/Portal.Services/AzW.Web.API
       - task: UseDotNet@2
         displayName: set use DotNet 5.0
         inputs:
           version: '5.0.x'
           includePreviewVersions: true # Required for preview versions

       - script: |
           echo build in directory Portal.Services/AzW.Web.API

       - script: dotnet restore Portal.Services/AzW.Web.API
         name: restore
         displayName: 'dotnet restore'

       - script: dotnet build ${{ variables.apiWorkingDir }} --configuration $(buildConfiguration)
         displayName: 'dotnet build'

       - script: |
           echo publishing Backend.API to directory: ${{ variables.apiPublishPath }}

       - script: dotnet publish ${{ variables.apiWorkingDir }} -o ${{ variables.apiPublishPath }}
         displayName: 'dotnet publish'

       - task: BinSkim@4
         inputs:
           InputType: 'Basic'
           Function: 'analyze'
           TargetPattern: 'guardianGlob'
           AnalyzeTargetGlob: '{{ variables.apiPublishPath }}\**.dll;{{ variables.apiPublishPath }}\**.exe;'

       - task: PublishBuildArtifacts@1
         name: publish_build_artifact
         inputs:
            PathtoPublish: '${{ variables.apiPublishPath }}'
            ArtifactName: 'drop'
            publishLocation: 'Container'

    - job: CD
    
      steps:
  
       - task: DownloadBuildArtifacts@1
         inputs:
                buildType: 'current'
                downloadType: 'single'
                downloadPath: '$(System.ArtifactsDirectory)/api/publish'
                artifactName: 'drop'
                  
       - task: AzureRmWebAppDeployment@4
         inputs:
                ConnectionType: 'AzureRM'
                azureSubscription: 'Weixian-Azure(ee611083-4581-4ba1-8116-a502d4539206)'
                appType: 'webApp'
                WebAppName: 'webapp-api-dev'
                packageForLinux: '$(System.ArtifactsDirectory)/api/publish/**'

      
